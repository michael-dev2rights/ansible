- block:

    # important in case we restart the tests after a fail.
    - name: ensure instance we are going to create is not present so create test is valid
      rds_instance:
        id: "{{ rds_instance_name }}"
        wait: yes
        state: absent
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'

    - name: ensure non-existent instance is not present
      rds_instance:
        id: "ansible-test-dont-create-youll-break-the-tests"
        state: absent
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'

    - name: ensure non-existent snapshot is not present
      rds_snapshot:
        db_snapshot_identifier: "ansible-test-dont-create-youll-break-the-tests"
        state: absent
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'

    - name: create rds instance
      rds_instance:
        id: "{{ rds_instance_name }}"
        wait_timeout: 1200
        wait: yes
        size: 5
        db_instance_class: db.t2.micro
        engine: postgres
        master_username: hello
        master_user_password: "world123$$"
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'
      register: rds_instance

    - name: show instance details
      debug:
        var: rds_instance

    - name: get instance facts
      rds_instance_facts:
        id: "{{ rds_instance_name }}"
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'

    - name: snapshot instance
      rds_snapshot:
        db_instance_identifier: "{{ rds_instance_name }}"
        db_snapshot_identifier: "{{ rds_instance_name }}-snapshot"
        wait_timeout: 1200
        wait: yes
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'

    - name: get snapshot facts
      rds_snapshot_facts:
        db_instance_identifier: "{{ rds_instance_name }}"
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'

    - name: delete snapshot
      rds_snapshot:
        db_snapshot_identifier: "{{ rds_instance_name }}-snapshot"
        state: absent
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'

    - name: get instance facts again to debug
      rds_instance_facts:
        instance_name: "{{ rds_instance_name }}"
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'

    - name: modify rds instance
      rds_instance:
        id: "{{ rds_instance_name }}"
        wait: yes
        size: 5
        instance_type: db.t2.micro
        db_engine: postgres
        master_username: hello
        port: 3307
        apply_immediately: yes
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'
      register: rds_instance_modify

    - name: check modify instance changed
      assert:
        that: rds_instance_modify|changed

    - name: don't modify rds instance
      rds_instance:
        id: "{{ rds_instance_name }}"
        wait: yes
        size: 5
        instance_type: db.t2.micro
        db_engine: postgres
        master_username: hello
        port: 3307
        apply_immediately: yes
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'
      register: rds_instance_no_modify

    - name: check non modify worked
      assert:
        that: not rds_instance_no_modify|changed

    - name: create rds replica
      rds_instance:
        id: "{{ rds_instance_name }}-replica"
        source_instance: "{{ rds_instance_name }}"
        wait: yes
        wait_timeout: 1200
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'

    # #NOT YET WORKING - bombs out with "No modifications were requested"
    # - name: promote rds replica
    #   rds_instance:
    #     id: "{{ rds_instance_name }}-replica"
    #     wait: yes

    - name: delete rds instance
      rds_instance:
        id: "{{ rds_instance_name }}"
        state: absent
        snapshot: "{{ rds_instance_name }}-snapshot"
        wait: yes
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'

    - name: delete replica
      rds_instance:
        id: "{{ rds_instance_name }}-replica"
        state: absent
        wait: yes
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'

    - name: restore from snapshot
      rds_instance:
        id: "{{ rds_instance_name }}-restore"
        snapshot: "{{ rds_instance_name }}-snapshot"
        wait: yes
        wait_timeout: 1200
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'

  always:

    - name: delete rds instance
      rds_instance:
        id: "{{ rds_instance_name }}"
        state: absent
        snapshot: "{{ rds_instance_name }}-snapshot"
        wait: yes
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'
      ignore_errors: true

    - name: delete restored instance
      rds_instance:
        id: "{{ rds_instance_name }}-restore"
        state: absent
        wait: yes
        region: '{{ec2_region}}'
        aws_access_key: '{{aws_access_key}}'
        aws_secret_key: '{{aws_secret_key}}'
        security_token: '{{security_token}}'
